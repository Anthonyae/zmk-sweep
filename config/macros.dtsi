

// General purpose 

    arrow_single: arrow_single {
        label = "ZMK_arrow_single";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        wait-ms = <30>;
        tap-ms = <20>;
        bindings = <&macro_tap &kp minus &kp GREATER_THAN>;
    };

// >; };										
// convenience_layer {										
//         bindings = <									
// &none            	&surround_bracket	&surround_paran  	&surround_bracket	&git_add         	                 	&none            	&none            	&none            	&none            	&none            
// &none            	&none            	&none            	&none            	&git_commit      	                 	&none            	&none            	&none            	&none            	&none            
// &none            	&none            	&none            	&none            	&git_push        	                 	&none            	&none            	&none            	&arrow_single    	&arrow_double    


    // arrow_double: arrow_double {
    //     label = "ZMK_arrow_double";
    //     compatible = "zmk,behavior-macro";
    //     #binding-cells = <0>;
    //     wait-ms = <30>;
    //     tap-ms = <20>;
    //     bindings = 
    //         <&macro_tap &kp equal &kp GREATER_THAN>
    //         ;
    // };

    // surround_brace: surround_brace {
    //     label = "ZMK_surround_brace";
    //     compatible = "zmk,behavior-macro";
    //     #binding-cells = <0>;
    //     wait-ms = <30>;
    //     tap-ms = <20>;
    //     bindings = 
    //         <&macro_tap &kp LBRC &kp RBRC &kp LEFT>
    //         ;
    // };
    
    // surround_paran: surround_paran {
    //     label = "ZMK_surround_paran";
    //     compatible = "zmk,behavior-macro";
    //     #binding-cells = <0>;
    //     wait-ms = <30>;
    //     tap-ms = <20>;
    //     bindings = 
    //         <&macro_tap &kp LPAR &kp RPAR &kp LEFT>
    //         ;
    // };

    // surround_bracket: surround_bracket {
    //     label = "ZMK_surround_bracket";
    //     compatible = "zmk,behavior-macro";
    //     #binding-cells = <0>;
    //     wait-ms = <30>;
    //     tap-ms = <20>;
    //     bindings = 
    //         <&macro_tap &kp LBKT &kp RBKT &kp LEFT>
    //         ;
    // };
    
    // git_add: git_add {
    //     label = "ZMK_git_add";
    //     compatible = "zmk,behavior-macro";
    //     #binding-cells = <0>;
    //     wait-ms = <30>;
    //     tap-ms = <20>;
    //     bindings = 
    //         <&macro_tap &kp g &kp i &kp t &kp space &kp a &kp d &kp d &kp space &kp dot>
    //         ;
    // };

    // git_commit: git_commit {
    //     label = "ZMK_git_commit";
    //     compatible = "zmk,behavior-macro";
    //     #binding-cells = <0>;
    //     wait-ms = <30>;
    //     tap-ms = <20>;
    //     bindings = 
    //         <&macro_tap &kp g &kp i &kp t &kp space &kp c &kp o &kp m &kp m &kp i &kp t &kp space &kp minus &kp m &kp space>
    //         ;
    // };

    // git_push: git_push {
    //     label = "ZMK_git_push";
    //     compatible = "zmk,behavior-macro";
    //     #binding-cells = <0>;
    //     wait-ms = <30>;
    //     tap-ms = <20>;
    //     bindings = 
    //         <&macro_tap &kp g &kp i &kp t &kp space &kp p &kp u &kp s &kp h >
    //         ;
    // };

// system shortcuts
    macro_undo: macro_undo {
        compatible = "zmk,behavior-macro";
        label = "macro_undo";
        #binding-cells = <0>;
        wait-ms = <0>;
        tap-ms = <40>;
        bindings = 
            <&macro_press &kp LCTRL>
            , <&macro_tap &kp Z>
            , <&macro_release &kp LCTRL>
        ;
    };

    macro_cut: macro_cut {
        compatible = "zmk,behavior-macro";
        label = "macro_cut";
        #binding-cells = <0>;
        wait-ms = <0>;
        tap-ms = <40>;
        bindings = 
            <&macro_press &kp LCTRL>
            , <&macro_tap &kp X>
            , <&macro_release &kp LCTRL>
        ;
    };

    macro_copy: macro_copy {
        compatible = "zmk,behavior-macro";
        label = "macro_copy";
        #binding-cells = <0>;
        wait-ms = <0>;
        tap-ms = <40>;
        bindings = 
            <&macro_press &kp LCTRL>
            , <&macro_tap &kp C>
            , <&macro_release &kp LCTRL>
        ;
    };

    macro_paste: macro_paste {
        compatible = "zmk,behavior-macro";
        label = "macro_paste";
        #binding-cells = <0>;
        wait-ms = <0>;
        tap-ms = <40>;
        bindings = 
            <&macro_press &kp LCTRL>
            , <&macro_tap &kp V>
            , <&macro_release &kp LCTRL>
        ;
    };

    macro_redo: macro_redo {
        compatible = "zmk,behavior-macro";
        label = "macro_redo";
        #binding-cells = <0>;
        wait-ms = <0>;
        tap-ms = <40>;
        bindings = 
            <&macro_press &kp LCTRL>
            , <&macro_tap &kp Y>
            , <&macro_release &kp LCTRL>
        ;
    };

    macro_all: macro_all {
        compatible = "zmk,behavior-macro";
        label = "macro_all";
        #binding-cells = <0>;
        wait-ms = <0>;
        tap-ms = <40>;
        bindings = 
            <&macro_press &kp LCTRL>
            , <&macro_tap &kp A>
            , <&macro_release &kp LCTRL>
        ;
    };
